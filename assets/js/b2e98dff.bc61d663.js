"use strict";(self.webpackChunk_elizaos_docs=self.webpackChunk_elizaos_docs||[]).push([[6525],{71184:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var o=n(14041);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}},94924:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"functions/composePrompt","title":"composePrompt","description":"@elizaos/core v1.2.1 / composePrompt","source":"@site/api/functions/composePrompt.md","sourceDirName":"functions","slug":"/functions/composePrompt","permalink":"/api/functions/composePrompt","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"composeActionExamples","permalink":"/api/functions/composeActionExamples"},"next":{"title":"composePromptFromState","permalink":"/api/functions/composePromptFromState"}}');var s=n(31085),r=n(71184);const i={},c="Function: composePrompt()",p={},a=[{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Defined in",id:"defined-in",level:2}];function l(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"/api/",children:"@elizaos/core v1.2.1"})," / composePrompt"]}),"\n",(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"function-composeprompt",children:"Function: composePrompt()"})}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"composePrompt"}),"(",(0,s.jsx)(t.code,{children:"options"}),"): ",(0,s.jsx)(t.code,{children:"string"})]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Function to compose a prompt using a provided template and state.\nIt compiles the template (upgrading double braces to triple braces for non-HTML escaping)\nand then populates it with values from the state. Additionally, it processes the\nresulting string with ",(0,s.jsx)(t.code,{children:"composeRandomUser"})," to replace placeholders like ",(0,s.jsx)(t.code,{children:"{{nameX}}"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.p,{children:["\u2022 ",(0,s.jsx)(t.strong,{children:"options"})]}),"\n",(0,s.jsx)(t.p,{children:"Object containing state and template information."}),"\n",(0,s.jsxs)(t.p,{children:["\u2022 ",(0,s.jsx)(t.strong,{children:"options.state"})]}),"\n",(0,s.jsx)(t.p,{children:"The state object containing values to fill the template."}),"\n",(0,s.jsxs)(t.p,{children:["\u2022 ",(0,s.jsx)(t.strong,{children:"options.template"}),": ",(0,s.jsx)(t.code,{children:"TemplateType"})]}),"\n",(0,s.jsx)(t.p,{children:"The template string or function to be used for composing the prompt."}),"\n",(0,s.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"string"})}),"\n",(0,s.jsx)(t.p,{children:"The composed prompt output, with state values and random user names populated."}),"\n",(0,s.jsx)(t.h2,{id:"defined-in",children:"Defined in"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/therealtimex/eliza-agent/blob/main/packages/core/src/utils.ts#L80",children:"packages/core/src/utils.ts:80"})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);